/*
  File prenotaVolo.java

  Generated by xklaim compiler
*/

import java.io.* ;
import Klava.* ;

public class prenotaVolo extends KlavaProcess {
  // parameters
  protected KInteger id;
  protected KString volo;
  protected KInteger numero;
  // variables
  protected LogicalLocality prenotazione = new LogicalLocality( "prenotazione" ) ;
  protected LogicalLocality compensator = new LogicalLocality( "compensator" ) ;
  protected KInteger posti;
  protected KInteger prezzo;
  protected Tuple __tuple_3;
  protected KInteger __backup_3_posti;
  protected KInteger __backup_4_prezzo;
  protected KBoolean __to_2;
  protected Tuple __tuple_4;
  // used definition names

  public prenotaVolo(
    KInteger id,
    KString volo,
    KInteger numero
  ) {
    // parameters
    this.id = id ;
    this.volo = volo ;
    this.numero = numero ;
  }

  public void execute() throws KlavaException {
    posti = new KInteger( - 1 ) ;
    prezzo = new KInteger( - 1 ) ;
    __tuple_3 = new Tuple() ;
    __tuple_3.add( volo ) ;
    __backup_3_posti = posti ;
    posti = new KInteger() ;
    __tuple_3.add( posti ) ;
    __backup_4_prezzo = prezzo ;
    prezzo = new KInteger() ;
    __tuple_3.add( prezzo ) ;
    __to_2 = new KBoolean( in_nb( __tuple_3, self ) ) ;
    if ( ! __to_2.booleanValue() ) {
      posti = __backup_3_posti ;
      prezzo = __backup_4_prezzo ;
    }
    if ( posti.intValue() >= numero.intValue() ) {
      out( volo, new KInteger( posti.intValue() - numero.intValue() ), prezzo, self ) ;
      __tuple_4 = new Tuple() ;
      __tuple_4.add( id ) ;
      __tuple_4.add( volo ) ;
      __tuple_4.add( numero ) ;
      __tuple_4.add( new KInteger( prezzo.intValue() * posti.intValue() ) ) ;
      __tuple_4.add( self ) ;
      out( __tuple_4, prenotazione ) ;
    } else {
      Print( ( new KString( "posti non disponibili nel volo" ) ) ) ;
      if ( posti.intValue() >= 0 ) {
        out( volo, posti, prezzo, self ) ;
      }
      out( new KString( "start" ), id, compensator ) ;
    }
  }
}
