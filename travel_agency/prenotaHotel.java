/*
  File prenotaHotel.java

  Generated by xklaim compiler
*/

import java.io.* ;
import Klava.* ;

public class prenotaHotel extends KlavaProcess {
  // parameters
  protected KInteger id;
  protected KString camera;
  protected KInteger numero;
  // variables
  protected LogicalLocality prenotazione = new LogicalLocality( "prenotazione" ) ;
  protected LogicalLocality compensator = new LogicalLocality( "compensator" ) ;
  protected KInteger posti;
  protected KInteger prezzo;
  protected Tuple __tuple_1;
  protected KInteger __backup_1_posti;
  protected KInteger __backup_2_prezzo;
  protected KBoolean __to_1;
  protected Tuple __tuple_2;
  // used definition names

  public prenotaHotel(
    KInteger id,
    KString camera,
    KInteger numero
  ) {
    // parameters
    this.id = id ;
    this.camera = camera ;
    this.numero = numero ;
  }

  public void execute() throws KlavaException {
    posti = new KInteger( - 1 ) ;
    prezzo = new KInteger( - 1 ) ;
    __tuple_1 = new Tuple() ;
    __tuple_1.add( camera ) ;
    __backup_1_posti = posti ;
    posti = new KInteger() ;
    __tuple_1.add( posti ) ;
    __backup_2_prezzo = prezzo ;
    prezzo = new KInteger() ;
    __tuple_1.add( prezzo ) ;
    __to_1 = new KBoolean( in_nb( __tuple_1, self ) ) ;
    if ( ! __to_1.booleanValue() ) {
      posti = __backup_1_posti ;
      prezzo = __backup_2_prezzo ;
    }
    if ( posti.intValue() >= numero.intValue() ) {
      out( camera, new KInteger( posti.intValue() - numero.intValue() ), prezzo, self ) ;
      __tuple_2 = new Tuple() ;
      __tuple_2.add( id ) ;
      __tuple_2.add( camera ) ;
      __tuple_2.add( numero ) ;
      __tuple_2.add( new KInteger( prezzo.intValue() * posti.intValue() ) ) ;
      __tuple_2.add( self ) ;
      out( __tuple_2, prenotazione ) ;
    } else {
      Print( ( new KString( "posti non disponibili in hotel" ) ) ) ;
      if ( posti.intValue() >= 0 ) {
        out( camera, posti, prezzo, self ) ;
      }
      out( new KString( "start" ), id, compensator ) ;
    }
  }
}
